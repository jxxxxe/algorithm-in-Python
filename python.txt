%를 그대로 출력 => %%
%.3f => 소수점 이하 넷 째 자리에서 반올림하여 소수점 이하 셋 째 자리까지
scanf("%d:%d", &h, &m); //콜론(:) 기호를 기준으로 두 수가 각 변수에 저장된다.
-----------------------------------------------------------
print("ㅋ"*9)	=> ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
print('나비')
print(True) / print(not True)

변수선언 > name="강아지" 	/ age=4	/ isadult=age>=3
<+로 연결할 때> 정수/boolean 변수 프린트할 때	> str(변수명)
<,로 연결할 때=>변수 앞뒤로 띄어쓰기가 생김>	> 정수/boolean을 str로 감싸주지 않아도 됨

주석	 : (한줄)#		/ 여러줄)'''~''' 혹은 드래그 후 ctrl+/

지수승	: **	2**3=>2^3를 뜻함
나누기 값 : /
나누기 몫 : //

연산자 : not, and(&), or(|)
절대값 : abs
지수승 : pow(a,b) => a^b
최대/최소값 :   max(a,b) / min(a,b)
반올림: 	round(a)

from math import *	=> math라이브러리 이용
내림: floor(a)
올림 : cell(a)
루트a : sqrt(a)

frmo random import *	=> 난수 라이브러리
*0.0~1.0 미만의 난수 : random()		
 (cf1. 0.0~100사이의 난수 : random()*100	   /    0.0~11.0 : random() +10)
 [cf2. 소수점 없애기 > int(random()) ]
*a~b 미만의 난수 randrange(a,b)
*a~b 이하의 난수 randint(a,b)	

*띄어쓰기가 포함된 문자열
sentence="""
~!
!##
!@~
"""

*문자열과 배열
st="abcdef"
@st[a:b] => a부터 b직전까지
[0] : a
[1:5] : bcde
[:4] : abcd (0번째부터 3번째까지)
[3:] : def (3번째부터 끝까지)
[-4:] : cdef 맨뒤에서 4번째부터
*배열원소 변수는 프린트할 때 str로 감싸주지 않아도 된다.

<문자열 처리 함수>
.lower() / .upper()	=> 문자열을 소문자/대문자로 전부 변환(예: st.lower() )
str[0].isupper()	=> 해당위치 문자가 대문자인지
len(str)		=> 문자열(str)의 길이(=문자의 개수)
.replace("a","b")	=> 문자열에서 a문자를 b로 변환 [예 : st.replace("java","python") ]
.index("a")	=> 제일 처음 나오는 a의 위치번호
 .index("a",index)	=> 두번째 a번호-_-
 .find("a")		=> =index 문자a를 찾으면 -1을 반환하고 넘어감(index는 오류로 종료)
.count("a")	=> a가 몇번 들어갔는지
if 'sss' in str => 문자열 str안에 sss가 포함되면 이라는 뜻

<문자열포맷>
1.print("%d" %20)	=> 정수자리에 20을 출력 /%c=> 문자 / %s=>문자열,정수,문자 
 print("%s %s" % ("파란", "빨간"))	=> 차례대로 파란 빨간을 출력
2.print("{}".format(20)))		=> 자료형 상관없이 그냥 출력
 print("{} {}" .format("빨간","파란"))	=> 빨간 파란
 print("{1} {0}" .format("빨간","파란"))	=> 파란 빨간
3.print("{age} {color}" .format(age=20, color="빨간"))	=> 20 빨간
4. (변수 선언 후) print(f"{변수1} {변수2} ..")
*정수를 문자열에 합하고 싶으면 str(정수)로 해주고 더하기

<탈출문자> => \
\n	=> 개행
\" \' \\	=> 앞의 \제외하고 출력됨
\r	=> 커서를 맨 앞으로 이동	(예 : A\rB : BA)
\b	=> 백스페이스(한글자 삭제)
\t	=> 탭

<리스트>
배열 초기화 : subway=[10,20,30] 식으로
값 20의 자리 : .index(20)
맨 뒤에 값 50을 추가 : .append(50)
n번째 자리에 20을 추가 : .insert(n,20)
맨 마지막 원소를 꺼냄 : .pop()
같은 이름의 원소가 몇개 있는지 : .count(20)
정렬 : .sort()
순서 뒤집기 : .reverse()
값 모두 지우기 : .clear()
*리스트는 다양한 자료형을 함께 원소로 쓸 수 있음
배열a와 배열 b합치기 a.extend(b)
한줄입력! => map(int,input().split())

사전
